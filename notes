;; This buffer is for text that is not saved, and for Lisp evaluation.
;; To create a file, visit it with C-x C-f and enter text in its buffer.


    ____        ____        ____        ____
   /    \      /    \      /    \      /    \
  /      \____/ 0,-3 \____/ 1,-3 \____/      \
  \      /    \      /    \      /    \      /
   \____/ 0,-2 \____/ 1,-2 \____/ 2,-2 \____/
   /    \      /    \      /    \      /    \
  /-1,-1 \____/ 0,-1 \____/ 1,-1 \____/ 2,-1 \
  \      /    \      /    \      /    \      /
   \____/  0,0 \____/  1,0 \____/  2,0 \____/
   /    \      /    \      /    \      /    \
  / -1,1 \____/  0,1 \____/  1,1 \____/  2,1 \
  \      /    \      /    \      /    \      /
   \____/  0,2 \____/  1,2 \____/  2,2 \____/
   /    \      /    \      /    \      /    \
  /      \____/  0,3 \____/  1,3 \____/      \
  \      /    \      /    \      /    \      /
   \____/      \____/      \____/      \____/


consider using chunk(splitn?) + window + zip + some cleverness to render the above


        println!("{}", "   ____");
        println!("{}{}{}", "  /", "    ".black().on_white(), "\\");
        println!("{}{}{}", " /", " ANT  ".black().on_blue(), "\\");
        println!("{}{}{}", " \\", "      ".black().on_white(), "/");
        println!("{}{}{}", "  \\", "____".black().on_white(), "/");

        println!("{}{}{}", "  /", "    ".white().on_black(), "\\");
        println!("{}{}{}", " /", " ANT  ".black().on_blue(), "\\");
        println!("{}{}{}", " \\", "      ".white().on_black(), "/");
        println!("{}{}{}", "  \\", "____".white().on_black(), "/");

        println!("{}{}{}", "  /", "    ".black().on_white(), "\\");
        println!("{}{}{}", " /", "G.HOPR".black().on_green(), "\\");
        println!("{}{}{}", " \\", "      ".black().on_white(), "/");
        println!("{}{}{}", "  \\", "____".black().on_white(), "/");

        println!("{}{}{}", "  /", "    ".white().on_black(), "\\");
        println!("{}{}{}", " /", "G.HOPR".black().on_green(), "\\");
        println!("{}{}{}", " \\", "      ".white().on_black(), "/");
        println!("{}{}{}", "  \\", "____".white().on_black(), "/");

        println!("{}{}{}", "  /", "    ".black().on_white(), "\\");
        println!("{}{}{}", " /", "SPIDER".black().on_red(), "\\");
        println!("{}{}{}", " \\", "      ".black().on_white(), "/");
        println!("{}{}{}", "  \\", "____".black().on_white(), "/");

        println!("{}{}{}", "  /", "    ".white().on_black(), "\\");
        println!("{}{}{}", " /", "SPIDER".black().on_red(), "\\");
        println!("{}{}{}", " \\", "      ".white().on_black(), "/");
        println!("{}{}{}", "  \\", "____".white().on_black(), "/");

        println!("{}{}{}", "  /", "    ".black().on_white(), "\\");
        println!("{}{}{}", " /", "BEETLE".black().on_purple(), "\\");
        println!("{}{}{}", " \\", "      ".black().on_white(), "/");
        println!("{}{}{}", "  \\", "____".black().on_white(), "/");

        println!("{}{}{}", "  /", "    ".white().on_black(), "\\");
        println!("{}{}{}", " /", "BEETLE".black().on_purple(), "\\");
        println!("{}{}{}", " \\", "      ".white().on_black(), "/");
        println!("{}{}{}", "  \\", "____".white().on_black(), "/");

        println!("{}{}{}", "  /", "    ".black().on_white(), "\\");
        println!("{}{}{}", " /", " BEE  ".black().on_yellow(), "\\");
        println!("{}{}{}", " \\", "      ".black().on_white(), "/");
        println!("{}{}{}", "  \\", "____".black().on_white(), "/");

        println!("{}{}{}", "  /", "    ".white().on_black(), "\\");
        println!("{}{}{}", " /", " BEE  ".black().on_yellow(), "\\");
        println!("{}{}{}", " \\", "      ".white().on_black(), "/");
println!("{}{}{}", "  \\", "____".white().on_black(), "/");

   x
   00112233
y0 x x x x
 1  x x x x
 2 x x x x
 3  x x x x
 4 x x x x
 5  x x x x
 6 x x x x
